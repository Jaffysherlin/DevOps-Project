name: CI/CD â€” Build & Deploy to AKS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Login to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3. Login to Azure Container Registry (ACR)
      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          registry: ${{ env.ACR_LOGIN_SERVER }}

      # 4. Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest

      # 5. Set AKS context
      - name: Set AKS context
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}
          resource-group: ${{ env.AKS_RESOURCE_GROUP }}

      # 6. Deploy to AKS
      - name: Deploy to AKS
        uses: azure/k8s-deploy@v3
        with:
          manifests: |
            k8s/deployment.yaml
            k8s/service.yaml
          add-github-actions-labels: false

      # 7. Show deployed service
      - name: Show deployed service
        run: kubectl get svc -n ${{ env.K8S_NAMESPACE }}

      # 8. Verify pods
      - name: Get pod status
        run: kubectl get pods -n ${{ env.K8S_NAMESPACE }}
